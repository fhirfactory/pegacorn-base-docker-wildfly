# This script will configure the ssl and use the certificates in the keystore and truststore.
# Without this a warning will be in the logs and a self signed certificate for localhost will be automatically generated. 

embed-server --server-config=standalone.xml
batch
/core-service=management/security-realm=UndertowRealm:add()
/core-service=management/security-realm=UndertowRealm/server-identity=ssl:add(keystore-path=/var/lib/pegacorn-keystores/keystore.jks,keystore-password=${env.KEY_PASSWORD})
/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=security-realm, value=UndertowRealm)
/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=enabled-protocols, value="TLSv1.2,TLSv1.3")
# https://scotthelme.co.uk/https-cheat-sheet/ has a good description of the cipher suites
/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=enabled-cipher-suites, value="TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256")

# From https://stackoverflow.com/questions/56272061/configure-http-headers-in-wildfly-10
# and https://cheatsheetseries.owasp.org/cheatsheets/Clickjacking_Defense_Cheat_Sheet.html
#/subsystem=undertow/configuration=filter/response-header=Content-Security-Policy:add(header-name=Content-Security-Policy,header-value="default-src 'self'")
/subsystem=undertow/configuration=filter/response-header=x-frame-options:add(header-name=X-Frame-Options,header-value="SAMEORIGIN")
/subsystem=undertow/configuration=filter/response-header=strict-transport-security:add(header-name=Strict-Transport-Security,header-value="max-age=31536000; includeSubDomains;")
#/subsystem=undertow/server=default-server/host=default-host/filter-ref=Content-Security-Policy/:add()
/subsystem=undertow/server=default-server/host=default-host/filter-ref=x-frame-options/:add()
/subsystem=undertow/server=default-server/host=default-host/filter-ref=strict-transport-security/:add()

# Kerberos configuration
/system-property=sun.security.krb5.debug:add(value=true)
/system-property=java.security.krb5.realm:add(value=PEGACORN-FHIRPLACE-AUDIT.LOCAL)
/system-property=java.security.krb5.kdc:add(value=pegacorn-fhirplace-kdcserver-0.pegacorn-fhirplace-kdcserver.site-a)
/system-property=java.security.krb5.conf:add(value=/etc/krb5.conf)
/core-service=management/security-realm=Kerberos:add
/core-service=management/security-realm=Kerberos/server-identity=kerberos:add
/core-service=management/security-realm=Kerberos/server-identity=kerberos/keytab=jboss@PEGACORN-FHIRPLACE-AUDIT.LOCAL:add(path=${env.KEYTAB_DIR}/hbase-krb5.keytab, debug=true)
/core-service=management/security-realm=Kerberos/authentication=kerberos:add(remove-realm=true)
			
/core-service=management/security-realm=ApplicationRealm:remove()
/core-service=management/security-realm=ApplicationRealm:add()
/core-service=management/security-realm=ApplicationRealm/server-identity=ssl:add(keystore-path=/var/lib/pegacorn-keystores/keystore.jks,keystore-password=${env.KEY_PASSWORD})

# From https://access.redhat.com/documentation/en-us/jboss_enterprise_application_platform/6.2/html/security_guide/configure_the_management_console_for_https_in_standalone_mode
/core-service=management/management-interface=http-interface:write-attribute(name=secure-socket-binding, value=management-https)
/core-service=management/management-interface=http-interface:undefine-attribute(name=socket-binding)

# From https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/how_to_configure_server_security/index
/core-service=management/security-realm=ManagementRealm/server-identity=ssl:add(keystore-path=/var/lib/pegacorn-keystores/keystore.jks,keystore-password=${env.KEY_PASSWORD},enabled-protocols=["TLSv1.2"],enabled-cipher-suites=["TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"])

run-batch

stop-embedded-server